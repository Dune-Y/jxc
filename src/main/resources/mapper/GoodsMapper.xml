<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.jxc.dao.GoodsDao">

    <resultMap id="BaseResultMap" type="com.atguigu.jxc.entity.Goods">
        <result column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="goods_code" property="goodsCode" jdbcType="VARCHAR"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="inventory_quantity" property="inventoryQuantity" jdbcType="INTEGER"/>
        <result column="last_purchasing_price" property="lastPurchasingPrice" jdbcType="DECIMAL"/>
        <result column="min_num" property="minNum" jdbcType="INTEGER"/>
        <result column="goods_model" property="goodsModel" jdbcType="VARCHAR"/>
        <result column="goods_producer" property="goodsProducer" jdbcType="VARCHAR"/>
        <result column="purchasing_price" property="purchasingPrice" jdbcType="DECIMAL"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="selling_price" property="sellingPrice" jdbcType="DECIMAL"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="goods_unit" property="goodsUnit" jdbcType="VARCHAR"/>
        <result column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER"/>
        <result column="goods_type_name" property="goodsTypeName" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="getGoodInventryList" resultMap="BaseResultMap">
        select t_goods.goods_id,
        t_goods.goods_name,
        t_goods.goods_code,
        t_goods.goods_type_id,
        t_goods.last_purchasing_price,
        t_goods.inventory_quantity,
        t_goods.min_num,
        t_goods.goods_model,
        t_goods.goods_producer,
        t_goods.purchasing_price,
        t_goods.remarks,
        t_goods.selling_price,
        t_goods.state,
        t_goods.goods_unit,
        t_goods_type.goods_type_name
        from t_goods
        left join t_goods_type on t_goods.goods_type_id = t_goods_type.goods_type_id

        <where>
            <if test="codeOrName != null and codeName =! ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{codeOrName},'%') OR
                t_goods.goods_code LIKE CONCAT('%', #{codeOrName},'%')
                )
            </if>
            <if test="goodsTypeId != null and goodsTypeId != ''">
                AND
                (
                t_goods.goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
        </where>
        limit #{offSet}, #{rows}

        # int offSet, Integer rows, String codeOrName, Integer goodsTypeId
        # lastPurchasingPrice, goodsTypeName,saleTotal
    </select>


    <select id="getGoodsInventoryCount" resultType="java.lang.Integer">
        select COUNT(*)
        from t_goods
        left join t_goods_type ON t_goods.goods_type_id = t_goods_type.goods_type_id
        <where>
            <if test="codeOrName != null and codeName =! ''">
                AND
                (
                t_goods.goods_name LIKE CONCAT('%', #{codeOrName},'%') OR
                t_goods.goods_code LIKE CONCAT('%', #{codeOrName},'%')
                )
            </if>
            <if test="goodsTypeId != null and goodsTypeId != ''">
                AND
                (
                t_goods.goods_type_id = #{goodsTypeId} OR
                t_goods_type.p_id = #{goodsTypeId}
                )
            </if>
        </where>

    </select>

</mapper>
